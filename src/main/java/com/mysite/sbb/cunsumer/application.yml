spring:
  docker:
    compose:
      lifecycle-management: start_only
  datasource:
    primary:
      jdbc-url: jdbc:postgresql://localhost:5555/mydatabase
      username: myuser
      password: secret
    secondary:
      jdbc-url: jdbc:postgresql://localhost:6666/testdatabase
      username: testuser
      password: testsecret
  jpa:
    hibernate:
      #      ddl-auto: update
      ddl-auto: create
    properties:
      hibernate:
        show_sql: true
        highlight_sql: true
        format_sql: true
  cache:
    type: redis
  data:
    redis:
      host: localhost
      port: 6379
  rabbitmq:
    queue: queue-01
logging:
  level:
    org:
      hibernate:
        type:
          descriptor:
            sql: trace

server:
  port: 8888
rabbitmq:
  exchange: exchange-01
  bindkey: binding_key

springdoc:
  swagger-ui:
    # swagger-ui 접근 경로. default 값은 /swagger-ui.html이다.
    path: /api

    # 각 API의 그룹 표시 순서
    # path, query, body, response 순으로 출력
    groups-order: DESC

    # 태그 정렬 순서.
    # alpha: 알파벳 순 정렬
    # method: OpenAPI specification file에 원하는 태그 정렬 방식 직접 기재
    tags-sorter: alpha

    # 컨트롤러 정렬 순서.
    # method는 delete - get - patch - post - put 순으로 정렬된다.
    # alpha를 사용해 알파벳 순으로 정렬할 수 있다.
    operations-sorter: method

    # swagger-ui default url인 petstore html의 비활성화 설정
    disable-swagger-default-url: true

    # swagger-ui에서 try 했을 때 request duration을 알려주는 설정
    display-request-duration: true

  # openAPI 접근 경로. default 값은 /v3/api-docs 이다.
  api-docs:
    path: /api-docs

  # Spring Actuator의 endpoint까지 보여줄 것인지?
  show-actuator: true

  # request media type 의 기본 값
  default-consumes-media-type: application/json

  # response media type 의 기본 값
  default-produces-media-type: application/json

  # 해당 패턴에 매칭되는 controller만 swagger-ui에 노출한다.
  paths-to-match:
    - /api/**